{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\nimport { persistStore, persistReducer, persistCombineReducers } from 'redux-persist';\nimport localForage from 'localforage';\nimport reducers from \"./redux/reducers\";\nlet middleware;\nmiddleware = applyMiddleware(promise, thunk, createLogger());\nconst persistConfig = {\n  key: 'root',\n  storage: localForage\n};\nconst persistedReducer = persistCombineReducers(persistConfig, reducers);\nexport const store = createStore(persistedReducer, middleware);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/budget/IHM/src/store.js"],"names":["applyMiddleware","createStore","createLogger","thunk","promise","persistStore","persistReducer","persistCombineReducers","localForage","reducers","middleware","persistConfig","key","storage","persistedReducer","store","persistor"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,sBAAtC,QAAmE,eAAnE;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,IAAIC,UAAJ;AACAA,UAAU,GAAGV,eAAe,CAACI,OAAD,EAAUD,KAAV,EAAiBD,YAAY,EAA7B,CAA5B;AACA,MAAMS,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBC,EAAAA,OAAO,EAAEL;AAFS,CAAtB;AAKA,MAAMM,gBAAgB,GAAGP,sBAAsB,CAACI,aAAD,EAAgBF,QAAhB,CAA/C;AACA,OAAO,MAAMM,KAAK,GAAGd,WAAW,CAACa,gBAAD,EAAmBJ,UAAnB,CAAzB;AACP,OAAO,MAAMM,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA9B","sourcesContent":["import {applyMiddleware, createStore} from 'redux'\nimport {createLogger} from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promise from 'redux-promise-middleware'\nimport {persistStore, persistReducer, persistCombineReducers} from 'redux-persist'\nimport localForage from 'localforage'\nimport reducers from \"./redux/reducers\"\n\nlet middleware;\nmiddleware = applyMiddleware(promise, thunk, createLogger());\nconst persistConfig = {\n    key: 'root',\n    storage: localForage,\n  }\n;\nconst persistedReducer = persistCombineReducers(persistConfig, reducers);\nexport const store = createStore(persistedReducer, middleware);\nexport const persistor = persistStore(store);\n\n\n"]},"metadata":{},"sourceType":"module"}